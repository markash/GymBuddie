# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build & deploy Gym Buddie Server & Client

'on':
  push:
    branches:
      - main
      - issue-*
  workflow_dispatch:

env:
  AWS_REGION: ${{ vars.PROJECT_AWS_REGION }}                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ${{ vars.PROJECT_ECR_REPOSITORY }}           # set this to your Amazon ECR repository name
  ECS_CLUSTER: ${{ vars.PROJECT_ECS_CLUSTER }}                 # set this to your Amazon ECS cluster name

  SERVER_ECS_SERVICE: ${{ vars.SERVER_ECS_SERVICE }}                 # set this to your Amazon ECS service name
  SERVER_ECS_TASK_DEFINITION: ${{ vars.SERVER_ECS_TASK_DEFINITION }} # set this to the path to your Amazon ECS task definition file, e.g. .aws/task-definition.json
  SERVER_CONTAINER_NAME: ${{ vars.SERVER_ECS_CONTAINER_NAME }}           # set this to the name of the container in the containerDefinitions section of your task definition
  ECS_REGISTRY_ALIAS: ${{ vars.PROJECT_ECS_REGISTRY_ALIAS }}
permissions:
  contents: read

jobs:

  authenticate:
    runs-on: ubuntu-latest
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read
    outputs:
      ECS_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::343218215658:role/GitHubAction-AssumeRoleWithAction
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
          mask-password: 'false'
          
  build:
    runs-on: ubuntu-latest
    needs: authenticate
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: microsoft

      - name: Build with Maven
        run: mvn -Pproduction clean install

      - name: Upload client artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: gym-buddie-client
          path: ${{ github.workspace }}/gym-buddie-client/target/*.jar

      - name: Upload server artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: gym-buddie-server
          path: ${{ github.workspace }}/gym-buddie-server/target/*.jar
          
      - name: Build and push server container image
        id: build-image
        uses: docker/build-push-action@v6
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry  }}
          IMAGE_TAG: ${{ github.sha }}
        with:
          context: .
          file: ${{ github.workspace }}/gym-buddie-server/Dockerfile
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECS_REGISTRY_ALIAS }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - name: Echo server image tag
        id: echo
        run: echo ${{ env.ECR_REGISTRY }}/${{ env.ECS_REGISTRY_ALIAS }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.SERVER_ECS_TASK_DEFINITION }}
          container-name: ${{ env.SERVER_CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.imageid }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.SERVER_ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true


  deploy-server:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download server artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: gym-buddie-server

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D4F785D6ED704383B7E8A11F3278D1BA }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_DFE6E3F45A5943B7BBD160135A95B155 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6BC2E16AD3324A9E869A0F0BDF5A1ECC }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: gym-buddie-server
          slot-name: Production
          package: '*server*.jar'

  deploy-client:
    runs-on: ubuntu-latest
    needs: 
      - build
      - deploy-server 
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download client artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: gym-buddie-client

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D4F785D6ED704383B7E8A11F3278D1BA }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_DFE6E3F45A5943B7BBD160135A95B155 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6BC2E16AD3324A9E869A0F0BDF5A1ECC }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: gym-buddie-client
          slot-name: Production
          package: '*client*.jar'